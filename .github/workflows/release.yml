# This workflow will release the BGIT CLI

name: Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.4'

    - name: Build
      run: make build

    - name: Test
      run: make test
  bump-version:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git user
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version
        id: bump_version
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` || echo "v0.0.0")
          latest_version=$(echo $latest_tag | sed 's/^v//')
          new_version=$(echo $latest_version | awk -F. -v OFS=. '{$NF++;print}')
          echo "New version: $new_version"
          git tag v$new_version
          git push origin v$new_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # release:
  #   name: Create Release
  #   runs-on: 'ubuntu-latest'
  #   needs: test
  #   strategy:
  #     matrix:
  #       goosarch:
  #         - 'linux/amd64'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: '1.22.4'
  #     - name: Get OS and arch info
  #       run: |
  #         GOOSARCH=${{matrix.goosarch}}
  #         GOOS=${GOOSARCH%/*}
  #         GOARCH=${GOOSARCH#*/}
  #         BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
  #         echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
  #         echo "GOOS=$GOOS" >> $GITHUB_ENV
  #         echo "GOARCH=$GOARCH" >> $GITHUB_ENV
  #     - name: Build
  #       run: make build
  #     - name: Release Notes
  #       run:
  #         git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"
  #     - name: Release with Notes
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         body_path: ".github/RELEASE-TEMPLATE.md"
  #         draft: true
  #         files: bgit
  #         #files: ${{env.BINARY_NAME}}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
